{"version":3,"sources":["reportWebVitals.js","redux/slices/setCurrentArray.js","redux/slices/setCurrentTimeSpeed.js","redux/slices/index.js","redux/store.js","constants/index.js","components/SortingVisualier.js","hooks/useClickOutside.js","assets/img/chart.svg","helpers/sleep.js","helpers/changeColorAnimation.js","helpers/finishedSort.js","helpers/getValueBar.js","helpers/swapHeightNormal.js","helpers/swapHeight.js","helpers/swapContentNormal.js","helpers/swapContent.js","algorithms/insertionSort.js","algorithms/bubbleSort.js","algorithms/heapSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","components/NavBar.js","helpers/randomIntFromInterval.js","assets/img/github.svg","components/Footer.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","setCurrentArray","createSlice","name","initialState","currentArray","reducers","updateArray","state","action","payload","actions","setCurrentArraySelector","setCurrentTimeSpeed","currentTime","updateTime","setCurrentTimeSpeedSelector","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","TIME_SPEED","PRIMARY_COLOR","SECONDARY_COLOR","THIRST_COLOR","CORLOR_RUN","YELLOW_COLOR","ORANGE_COLOR","PINK_COLOR","QUICK_SORT","HEAP_SORT","SELECT_SORT","BUBBLE_SORT","MERGED_SORT","INSERT_SORT","LIST_ALGORITHM","id","type","SPEED_SLOW","SPEED_NORMAL","SPEED_MEDIUM","SPEED_FAST","SPEED_SUPER_FAST","SPEEDS","SortingVisualier","amountArray","useSelector","numWidth","Math","floor","document","body","clientWidth","length","width","concat","color","_jsx","_Fragment","children","className","map","value","index","style","backgroundColor","height","margin","useClickOutside","ref","callback","handleClick","e","current","contains","target","React","useEffect","addEventListener","removeEventListener","sleep","ms","Promise","resolve","setTimeout","changeColorAnimation","_x","_x2","_x3","_changeColorAnimation","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arr","i","_args","wrap","_context","prev","next","undefined","stop","finishedSort","_finishedSort","bars","k","getValueBar","heightString","heightConvert","slice","Number","swapHeightNormal","j","temp","swapHeight","_swapHeight","swapContentNormal","innerText","swapContent","_swapContent","insertionSort","time","heightElement","_k","querySelectorAll","childNodes","innerHTML","bubbleSort","x","y","all","heapify","n","largest","l","r","_x4","heapSort","_ref2","_callee2","_i","_context2","_x5","selectionSort","minIndex","val1","val2","partition","start","end","poviotValues","currentBar","background","abrupt","quickSort","position","sent","_x6","_x7","_x8","doMerge","middleIndex","n1","n2","L","R","_i2","parseInt","mergeSort","_x9","NavBar","_useState","useState","_useState2","_slicedToArray","showDropdown","setShowDropdown","_useState3","_useState4","showSpeed","setShowSpeed","_useState5","_useState6","disable","setDisable","_useState7","_useState8","setValue","_useState9","_useState10","typeAlgorithm","setTypeAlgorithm","_useState11","_useState12","typeSpeed","setTypeSpeed","_useState13","_useState14","setColor","currentTimeSpeed","dispatch","useDispatch","dropdownRef","useRef","speedRef","onResetColorBar","initCurrentBars","min","max","array","push","clientHeight","random","actionSort","size","_jsxs","src","ChartIcon","alt","onClick","step","onChange","getElementById","algorithm","speed","Footer","App","ReactDOM","render","StrictMode","Provider","PersistGate"],"mappings":"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","file":"static/js/main.0002abab.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry)\r\n            getFID(onPerfEntry)\r\n            getFCP(onPerfEntry)\r\n            getLCP(onPerfEntry)\r\n            getTTFB(onPerfEntry)\r\n        })\r\n    }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst setCurrentArray = createSlice({\r\n    name: 'setCurrentArray',\r\n    initialState: {\r\n        currentArray: [],\r\n    },\r\n    reducers: {\r\n        updateArray: (state, action) => {\r\n            state.currentArray = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { updateArray } = setCurrentArray.actions\r\nexport const setCurrentArraySelector = (state) => state.setCurrentArray.currentArray\r\nexport default setCurrentArray.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst setCurrentTimeSpeed = createSlice({\r\n    name: 'setCurrentTimeSpeed',\r\n    initialState: {\r\n        currentTime: 200,\r\n    },\r\n    reducers: {\r\n        updateTime: (state, action) => {\r\n            state.currentTime = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { updateTime } = setCurrentTimeSpeed.actions\r\nexport const setCurrentTimeSpeedSelector = (state) =>\r\n    state.setCurrentTimeSpeed.currentTime\r\nexport default setCurrentTimeSpeed.reducer\r\n","import { combineReducers } from 'redux'\r\n\r\nimport setCurrentArray from './setCurrentArray'\r\nimport setCurrentTimeSpeed from './setCurrentTimeSpeed'\r\n\r\nconst rootReducer = combineReducers({\r\n    setCurrentArray,\r\n    setCurrentTimeSpeed,\r\n})\r\n\r\nexport default rootReducer\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport rootReducer from './slices'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store\r\n","export const TIME_SPEED = 200\r\nexport const TIME_SPEED_SLOW = 500\r\nexport const TIME_SPEED_NORMAL = 200\r\nexport const TIME_SPEED_MEDIUM = 100\r\nexport const TIME_SPEED_FAST = 50\r\nexport const TIME_SPEED_SUPER_FAST = 20\r\n\r\n// This is the main color of the array bars.\r\nexport const PRIMARY_COLOR = '#16FF00'\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nexport const SECONDARY_COLOR = 'Crimson'\r\n// Color after sorted\r\nexport const THIRST_COLOR = 'rgb(0, 250, 154)' /* MediumSpringGreen */\r\n\r\nexport const CORLOR_RUN = 'DarkSlateBlue'\r\n\r\nexport const YELLOW_COLOR = 'yellow'\r\nexport const ORANGE_COLOR = 'orange'\r\nexport const PINK_COLOR = 'pink'\r\n\r\nexport const QUICK_SORT = 'Quick Sort'\r\nexport const HEAP_SORT = 'Heap Sort'\r\nexport const SELECT_SORT = 'Selection Sort'\r\nexport const BUBBLE_SORT = 'Bubble Sort'\r\nexport const MERGED_SORT = 'Merge Sort'\r\nexport const INSERT_SORT = 'Insertion Sort'\r\n// export const SHELL_SORT = 'Shell Sort'\r\nexport const LIST_ALGORITHM = [\r\n    {\r\n        id: 1,\r\n        type: QUICK_SORT,\r\n    },\r\n    {\r\n        id: 2,\r\n        type: MERGED_SORT,\r\n    },\r\n    {\r\n        id: 3,\r\n        type: SELECT_SORT,\r\n    },\r\n    {\r\n        id: 4,\r\n        type: BUBBLE_SORT,\r\n    },\r\n    {\r\n        id: 5,\r\n        type: HEAP_SORT,\r\n    },\r\n    {\r\n        id: 6,\r\n        type: INSERT_SORT,\r\n    },\r\n    // {\r\n    //     id: 7,\r\n    //     type: SHELL_SORT,\r\n    // },\r\n]\r\nexport const SPEED_SLOW = 'Slow'\r\nexport const SPEED_NORMAL = 'Normal'\r\nexport const SPEED_MEDIUM = 'Medium'\r\nexport const SPEED_FAST = 'Fast'\r\nexport const SPEED_SUPER_FAST = 'Super fast'\r\nexport const SPEEDS = [\r\n    {\r\n        id: 1,\r\n        type: SPEED_SLOW,\r\n    },\r\n    {\r\n        id: 2,\r\n        type: SPEED_NORMAL,\r\n    },\r\n    {\r\n        id: 3,\r\n        type: SPEED_MEDIUM,\r\n    },\r\n    {\r\n        id: 4,\r\n        type: SPEED_FAST,\r\n    },\r\n    {\r\n        id: 5,\r\n        type: SPEED_SUPER_FAST,\r\n    },\r\n]\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { PRIMARY_COLOR } from '../constants'\r\nimport { setCurrentArraySelector } from '../redux/slices/setCurrentArray'\r\nimport './SortingVisualier.css'\r\n\r\nfunction SortingVisualier() {\r\n    const amountArray = useSelector(setCurrentArraySelector)\r\n\r\n    const numWidth = Math.floor(document.body.clientWidth / (amountArray.length * 3))\r\n    const width = `${numWidth * 2}px`\r\n    const color = numWidth > 20 ? 'white' : 'transparent'\r\n\r\n    return (\r\n        <>\r\n            <div className=\"data-container\">\r\n                {amountArray.map((value, index) => (\r\n                    <div\r\n                        className=\"bar\"\r\n                        // eslint-disable-next-line react/no-array-index-key\r\n                        key={index}\r\n                        style={{\r\n                            backgroundColor: PRIMARY_COLOR,\r\n                            height: `${value}px`,\r\n                            margin: '0 0 0 2px',\r\n                            width,\r\n                        }}\r\n                    >\r\n                        <span style={{ color }}>{value}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SortingVisualier\r\n","import React from 'react'\r\n\r\nconst useClickOutside = (ref, callback) => {\r\n    const handleClick = (e) => {\r\n        if (ref.current && !ref.current.contains(e.target)) {\r\n            callback()\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        return () => {\r\n            document.removeEventListener('click', handleClick)\r\n        }\r\n    })\r\n}\r\n\r\nexport default useClickOutside\r\n","export default __webpack_public_path__ + \"static/media/chart.b211f0fb.svg\";","export default function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n","import sleep from './sleep'\r\nimport { TIME_SPEED } from '../constants'\r\n\r\nexport default async function changeColorAnimation(arr, i, color, ms = TIME_SPEED) {\r\n    arr[i].style.backgroundColor = color\r\n    await sleep(ms)\r\n}\r\n","import { PRIMARY_COLOR } from '../constants'\r\nimport changeColorAnimation from './changeColorAnimation'\r\n\r\nexport default async function finishedSort(bars, ms) {\r\n    for (let k = 0; k < bars.length; k++) {\r\n        await changeColorAnimation(bars, k, PRIMARY_COLOR, ms)\r\n    }\r\n}\r\n","export default function getValueBar(arr, i) {\r\n    const heightString = arr[i].style.height\r\n    /**\r\n     * @NOTE: slice \"px\"\r\n     */\r\n    const heightConvert = heightString.slice(0, heightString.length - 2)\r\n    return Number(heightConvert)\r\n}\r\n","export default function swapHeightNormal(arr, i, j) {\r\n    const temp = arr[i].style.height\r\n    arr[i].style.height = arr[j].style.height\r\n    arr[j].style.height = temp\r\n}\r\n","import { TIME_SPEED } from '../constants'\r\nimport sleep from './sleep'\r\n\r\nexport default async function swapHeight(arr, i, j, ms = TIME_SPEED) {\r\n    const temp = arr[i].style.height\r\n    arr[i].style.height = arr[j].style.height\r\n    arr[j].style.height = temp\r\n    await sleep(ms)\r\n}\r\n","export default function swapContentNormal(arr, i, j) {\r\n    const temp = arr[i].children[0].innerText\r\n    arr[i].children[0].innerText = arr[j].children[0].innerText\r\n    arr[j].children[0].innerText = temp\r\n}\r\n","import { TIME_SPEED } from '../constants'\r\nimport sleep from './sleep'\r\n\r\nexport default async function swapContent(arr, i, j, ms = TIME_SPEED) {\r\n    const temp = arr[i].children[0].innerText\r\n    arr[i].children[0].innerText = arr[j].children[0].innerText\r\n    arr[j].children[0].innerText = temp\r\n    await sleep(ms)\r\n}\r\n","import { CORLOR_RUN, PINK_COLOR, THIRST_COLOR } from '../constants'\r\nimport { changeColorAnimation, finishedSort, getValueBar } from '../helpers'\r\n\r\nconst insertionSort = async (time) => {\r\n    const bars = document.querySelectorAll('.bar')\r\n\r\n    await changeColorAnimation(bars, 0, THIRST_COLOR, time)\r\n\r\n    for (let i = 1; i < bars.length; i++) {\r\n        const key = getValueBar(bars, i)\r\n\r\n        const heightElement = bars[i].style.height\r\n        let j = i - 1\r\n\r\n        await changeColorAnimation(bars, i, CORLOR_RUN, time)\r\n\r\n        while (j >= 0 && getValueBar(bars, j) > key) {\r\n            await changeColorAnimation(bars, j, CORLOR_RUN, 100)\r\n\r\n            bars[j + 1].children[0].innerText = getValueBar(bars, j)\r\n            bars[j + 1].style.height = bars[j].style.height\r\n\r\n            j -= 1\r\n\r\n            for (let k = i; k >= 0; k--) {\r\n                bars[k].style.backgroundColor = PINK_COLOR\r\n            }\r\n        }\r\n\r\n        bars[j + 1].style.height = heightElement\r\n        bars[j + 1].childNodes[0].innerHTML = key\r\n\r\n        await changeColorAnimation(bars, i, THIRST_COLOR, time)\r\n        if (i === bars.length - 1) {\r\n            for (let k = i; k >= 0; k--) {\r\n                await changeColorAnimation(bars, k, THIRST_COLOR, time)\r\n            }\r\n        }\r\n    }\r\n    await finishedSort(bars, 100)\r\n}\r\n\r\nexport default insertionSort\r\n","import { CORLOR_RUN, PINK_COLOR, THIRST_COLOR } from '../constants'\r\nimport {\r\n    changeColorAnimation,\r\n    finishedSort,\r\n    getValueBar,\r\n    swapContent,\r\n    swapHeight,\r\n} from '../helpers'\r\n\r\nconst bubbleSort = async (time) => {\r\n    const bars = document.querySelectorAll('.bar')\r\n\r\n    for (let i = 0; i < bars.length - 1; i++) {\r\n        for (let j = 0; j < bars.length - i - 1; j++) {\r\n            const x = getValueBar(bars, j)\r\n            const y = getValueBar(bars, j + 1)\r\n            await Promise.all([\r\n                changeColorAnimation(bars, j, CORLOR_RUN, time),\r\n                changeColorAnimation(bars, j + 1, CORLOR_RUN, time),\r\n            ])\r\n            if (y < x) {\r\n                await Promise.all([\r\n                    swapHeight(bars, j, j + 1, time),\r\n                    swapContent(bars, j, j + 1, time),\r\n                ])\r\n            }\r\n            await Promise.all([\r\n                changeColorAnimation(bars, j, PINK_COLOR, time),\r\n                changeColorAnimation(bars, j + 1, PINK_COLOR, time),\r\n            ])\r\n        }\r\n        await changeColorAnimation(bars, bars.length - i - 1, THIRST_COLOR, time)\r\n        if (bars.length - i - 1 === 1) {\r\n            await changeColorAnimation(bars, 0, THIRST_COLOR, time)\r\n        }\r\n    }\r\n    await finishedSort(bars, 100)\r\n}\r\nexport default bubbleSort\r\n","import {\r\n    ORANGE_COLOR,\r\n    PINK_COLOR,\r\n    SECONDARY_COLOR,\r\n    THIRST_COLOR,\r\n} from '../constants'\r\nimport {\r\n    changeColorAnimation,\r\n    finishedSort,\r\n    getValueBar,\r\n    swapContent,\r\n    swapHeight,\r\n} from '../helpers'\r\n\r\nconst heapify = async (arr, n, i, time) => {\r\n    let largest = i\r\n    const l = 2 * i + 1\r\n    const r = 2 * i + 2\r\n\r\n    if (l < n && getValueBar(arr, l) > getValueBar(arr, largest)) {\r\n        largest = l\r\n    }\r\n\r\n    if (r < n && getValueBar(arr, r) > getValueBar(arr, largest)) {\r\n        largest = r\r\n    }\r\n\r\n    if (largest !== i) {\r\n        await Promise.all([\r\n            changeColorAnimation(arr, i, ORANGE_COLOR, time),\r\n            swapHeight(arr, i, largest, time),\r\n            swapContent(arr, i, largest, time),\r\n            heapify(arr, n, largest, time),\r\n        ])\r\n    }\r\n\r\n    arr[largest].style.backgroundColor = SECONDARY_COLOR\r\n}\r\n\r\nconst heapSort = async (time) => {\r\n    const arr = document.querySelectorAll('.bar')\r\n    const n = arr.length\r\n\r\n    for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n        await changeColorAnimation(arr, i, PINK_COLOR, time)\r\n        await heapify(arr, n, i)\r\n    }\r\n\r\n    for (let i = n - 1; i > 0; i--) {\r\n        await changeColorAnimation(arr, i, THIRST_COLOR, time)\r\n        await Promise.all([\r\n            swapHeight(arr, 0, i, time),\r\n            swapContent(arr, 0, i, time),\r\n            heapify(arr, i, 0, time),\r\n        ])\r\n    }\r\n    arr[0].style.backgroundColor = THIRST_COLOR\r\n    await finishedSort(arr, 100)\r\n}\r\nexport default heapSort\r\n","import {\r\n    CORLOR_RUN,\r\n    PRIMARY_COLOR,\r\n    SECONDARY_COLOR,\r\n    THIRST_COLOR,\r\n} from '../constants'\r\nimport {\r\n    changeColorAnimation,\r\n    finishedSort,\r\n    getValueBar,\r\n    swapContent,\r\n    swapHeight,\r\n} from '../helpers'\r\n\r\nconst selectionSort = async (time) => {\r\n    const bars = document.querySelectorAll('.bar')\r\n    let minIndex = 0\r\n\r\n    for (let i = 0; i < bars.length; i++) {\r\n        minIndex = i\r\n        await changeColorAnimation(bars, i, CORLOR_RUN, time)\r\n\r\n        for (let j = i + 1; j < bars.length; j++) {\r\n            await changeColorAnimation(bars, j, SECONDARY_COLOR, time)\r\n\r\n            const val1 = getValueBar(bars, j)\r\n            const val2 = getValueBar(bars, minIndex)\r\n\r\n            if (val1 < val2) {\r\n                if (minIndex !== i) {\r\n                    await changeColorAnimation(bars, minIndex, PRIMARY_COLOR, time)\r\n                }\r\n                minIndex = j\r\n            } else {\r\n                await changeColorAnimation(bars, j, PRIMARY_COLOR, time)\r\n            }\r\n        }\r\n\r\n        await Promise.all([\r\n            swapHeight(bars, minIndex, i, time),\r\n            swapContent(bars, minIndex, i, time),\r\n            changeColorAnimation(bars, minIndex, PRIMARY_COLOR, time),\r\n            changeColorAnimation(bars, i, THIRST_COLOR, time),\r\n        ])\r\n    }\r\n    await finishedSort(bars, 100)\r\n}\r\n\r\nexport default selectionSort\r\n","import {\r\n    ORANGE_COLOR,\r\n    PINK_COLOR,\r\n    PRIMARY_COLOR,\r\n    SECONDARY_COLOR,\r\n    THIRST_COLOR,\r\n    TIME_SPEED,\r\n    YELLOW_COLOR,\r\n} from '../constants'\r\nimport { getValueBar, sleep, swapContentNormal, swapHeightNormal } from '../helpers'\r\n\r\nconst partition = async (arr, start, end, time) => {\r\n    const poviotValues = getValueBar(arr, end)\r\n    let i = start - 1\r\n    arr[end].style.backgroundColor = SECONDARY_COLOR\r\n\r\n    for (let j = start; j < end; j++) {\r\n        const currentBar = getValueBar(arr, j)\r\n\r\n        arr[j].style.backgroundColor = YELLOW_COLOR\r\n        await sleep(time || TIME_SPEED)\r\n\r\n        if (currentBar <= poviotValues) {\r\n            i++\r\n\r\n            swapHeightNormal(arr, i, j)\r\n            swapContentNormal(arr, i, j)\r\n            arr[i].style.backgroundColor = ORANGE_COLOR\r\n\r\n            if (i !== j) {\r\n                arr[j].style.backgroundColor = ORANGE_COLOR\r\n            }\r\n            await sleep(time || TIME_SPEED)\r\n        } else {\r\n            arr[j].style.backgroundColor = PINK_COLOR\r\n        }\r\n    }\r\n    await sleep(time || TIME_SPEED)\r\n\r\n    swapHeightNormal(arr, i + 1, end)\r\n    swapContentNormal(arr, i + 1, end)\r\n\r\n    arr[end].style.background = PINK_COLOR\r\n    arr[i + 1].style.background = THIRST_COLOR\r\n\r\n    await sleep(time || TIME_SPEED)\r\n\r\n    for (let k = 0; k < arr.length; k++) {\r\n        if (arr[k].style.background !== THIRST_COLOR) {\r\n            arr[k].style.background = PRIMARY_COLOR\r\n        }\r\n    }\r\n\r\n    return i + 1\r\n}\r\n\r\nconst quickSort = async (arr, start, end, time) => {\r\n    if (start < end) {\r\n        const position = await partition(arr, start, end, time)\r\n        await Promise.all([\r\n            quickSort(arr, start, position - 1, time),\r\n            quickSort(arr, position + 1, end, time),\r\n        ])\r\n    } else if (start >= 0 && end >= 0 && start < arr.length && end < arr.length) {\r\n        arr[end].style.background = THIRST_COLOR\r\n        arr[start].style.background = THIRST_COLOR\r\n    }\r\n}\r\n\r\nexport default quickSort\r\n","import {\r\n    ORANGE_COLOR,\r\n    PINK_COLOR,\r\n    THIRST_COLOR,\r\n    TIME_SPEED,\r\n    YELLOW_COLOR,\r\n} from '../constants'\r\nimport { sleep } from '../helpers'\r\n\r\nconst doMerge = async (arr, start, middleIndex, end, time) => {\r\n    const n1 = middleIndex - start + 1\r\n    const n2 = end - middleIndex\r\n\r\n    const L = []\r\n    const R = []\r\n\r\n    for (let i = 0; i < n1; i++) {\r\n        await sleep(time || TIME_SPEED)\r\n        arr[start + i].style.backgroundColor = ORANGE_COLOR\r\n        L[i] = arr[start + i].style.height\r\n    }\r\n\r\n    for (let i = 0; i < n2; i++) {\r\n        await sleep(time || TIME_SPEED)\r\n        arr[middleIndex + 1 + i].style.backgroundColor = YELLOW_COLOR\r\n        R[i] = arr[middleIndex + 1 + i].style.height\r\n    }\r\n\r\n    let i = 0\r\n    let j = 0\r\n    let k = start\r\n\r\n    while (i < n1 && j < n2) {\r\n        if (parseInt(L[i], 10) <= parseInt(R[j], 10)) {\r\n            await sleep(time || TIME_SPEED)\r\n            if (n1 + n2 === arr.length) {\r\n                arr[k].style.backgroundColor = THIRST_COLOR\r\n            } else {\r\n                arr[k].style.backgroundColor = PINK_COLOR\r\n            }\r\n            arr[k].style.height = L[i]\r\n            arr[k].children[0].innerText = parseInt(L[i], 10)\r\n            i++\r\n        } else {\r\n            if (n1 + n2 === arr.length) {\r\n                arr[k].style.backgroundColor = THIRST_COLOR\r\n            } else {\r\n                arr[k].style.backgroundColor = PINK_COLOR\r\n            }\r\n            arr[k].style.height = R[j]\r\n            arr[k].children[0].innerText = parseInt(R[j], 10)\r\n            j++\r\n        }\r\n        k++\r\n    }\r\n\r\n    while (i < n1) {\r\n        await sleep(time || TIME_SPEED)\r\n        if (n1 + n2 === arr.length) {\r\n            arr[k].style.backgroundColor = THIRST_COLOR\r\n        } else {\r\n            arr[k].style.backgroundColor = PINK_COLOR\r\n        }\r\n        arr[k].style.height = L[i]\r\n        arr[k].children[0].innerText = parseInt(L[i], 10)\r\n        i++\r\n        k++\r\n    }\r\n\r\n    while (j < n2) {\r\n        await sleep(time || TIME_SPEED)\r\n        if (n1 + n2 === arr.length) {\r\n            arr[k].style.backgroundColor = THIRST_COLOR\r\n        } else {\r\n            arr[k].style.backgroundColor = PINK_COLOR\r\n        }\r\n        arr[k].style.height = R[j]\r\n        arr[k].children[0].innerText = parseInt(R[j], 10)\r\n        j++\r\n        k++\r\n    }\r\n}\r\n\r\nconst mergeSort = async (arr, start, end, time) => {\r\n    if (start < end) {\r\n        const middleIndex = start + Math.floor((end - start) / 2)\r\n\r\n        await mergeSort(arr, start, middleIndex, time)\r\n        await mergeSort(arr, middleIndex + 1, end, time)\r\n        await doMerge(arr, start, middleIndex, end, time)\r\n    }\r\n}\r\n\r\nexport default mergeSort\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useClickOutside } from '../hooks'\r\nimport ChartIcon from '../assets/img/chart.svg'\r\nimport {\r\n    insertionSort,\r\n    bubbleSort,\r\n    heapSort,\r\n    // shellSort,\r\n    selectionSort,\r\n    quickSort,\r\n    mergeSort,\r\n} from '../algorithms'\r\n\r\nimport {\r\n    PRIMARY_COLOR,\r\n    QUICK_SORT,\r\n    HEAP_SORT,\r\n    SELECT_SORT,\r\n    BUBBLE_SORT,\r\n    MERGED_SORT,\r\n    INSERT_SORT,\r\n    SHELL_SORT,\r\n    LIST_ALGORITHM,\r\n    SPEED_SLOW,\r\n    SPEED_NORMAL,\r\n    SPEED_MEDIUM,\r\n    SPEED_FAST,\r\n    SPEED_SUPER_FAST,\r\n    SPEEDS,\r\n    TIME_SPEED_SLOW,\r\n    TIME_SPEED_NORMAL,\r\n    TIME_SPEED_MEDIUM,\r\n    TIME_SPEED_FAST,\r\n    TIME_SPEED_SUPER_FAST,\r\n} from '../constants'\r\nimport { randomIntFromInterval } from '../helpers'\r\nimport { updateArray } from '../redux/slices/setCurrentArray'\r\nimport {\r\n    updateTime,\r\n    setCurrentTimeSpeedSelector,\r\n} from '../redux/slices/setCurrentTimeSpeed'\r\nimport './NavBar.css'\r\n\r\nfunction NavBar() {\r\n    const [showDropdown, setShowDropdown] = useState(false)\r\n    const [showSpeed, setShowSpeed] = useState(false)\r\n    const [disable, setDisable] = useState(false)\r\n    const [value, setValue] = useState(10)\r\n    const [typeAlgorithm, setTypeAlgorithm] = useState('')\r\n    const [typeSpeed, setTypeSpeed] = useState('')\r\n    const [color, setColor] = useState(false)\r\n\r\n    const currentTimeSpeed = useSelector(setCurrentTimeSpeedSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const dropdownRef = React.useRef()\r\n    const speedRef = React.useRef()\r\n\r\n    const handleShowDropdown = () => {\r\n        setColor(true)\r\n        setShowDropdown(!showDropdown)\r\n        if (!color) {\r\n            document.getElementById('Algo').style.color = `#16FF00`\r\n            setColor(true)\r\n        } else {\r\n            document.getElementById('Algo').style.color = `white`\r\n            setColor(false)\r\n        }\r\n    }\r\n    const handleShowSpeed = () => {\r\n        setColor(true)\r\n        setShowSpeed(!showSpeed)\r\n        if (!color) {\r\n            document.getElementById('Speed').style.color = `#16FF00`\r\n            setColor(true)\r\n        } else {\r\n            document.getElementById('Speed').style.color = `white`\r\n            setColor(false)\r\n        }\r\n    }\r\n    const handleChooseAlgorithm = (type) => {\r\n        if (type === QUICK_SORT) {\r\n            setTypeAlgorithm(QUICK_SORT)\r\n        }\r\n        if (type === MERGED_SORT) {\r\n            setTypeAlgorithm(MERGED_SORT)\r\n        }\r\n        if (type === BUBBLE_SORT) {\r\n            setTypeAlgorithm(BUBBLE_SORT)\r\n        }\r\n        if (type === HEAP_SORT) {\r\n            setTypeAlgorithm(HEAP_SORT)\r\n        }\r\n        if (type === INSERT_SORT) {\r\n            setTypeAlgorithm(INSERT_SORT)\r\n        }\r\n        if (type === SELECT_SORT) {\r\n            setTypeAlgorithm(SELECT_SORT)\r\n        }\r\n        // if (type === SHELL_SORT) {\r\n        //     setTypeAlgorithm(SHELL_SORT)\r\n        // }\r\n    }\r\n    const handleChooseSpeed = (type) => {\r\n        if (type === SPEED_SLOW) {\r\n            setTypeSpeed(SPEED_SLOW)\r\n            dispatch(updateTime(TIME_SPEED_SLOW))\r\n        }\r\n        if (type === SPEED_NORMAL) {\r\n            setTypeSpeed(SPEED_NORMAL)\r\n            dispatch(updateTime(TIME_SPEED_NORMAL))\r\n        }\r\n        if (type === SPEED_MEDIUM) {\r\n            setTypeSpeed(SPEED_MEDIUM)\r\n            dispatch(updateTime(TIME_SPEED_MEDIUM))\r\n        }\r\n        if (type === SPEED_FAST) {\r\n            setTypeSpeed(SPEED_FAST)\r\n            dispatch(updateTime(TIME_SPEED_FAST))\r\n        }\r\n        if (type === SPEED_SUPER_FAST) {\r\n            setTypeSpeed(SPEED_SUPER_FAST)\r\n            dispatch(updateTime(TIME_SPEED_SUPER_FAST))\r\n        }\r\n    }\r\n    const onResetColorBar = () => {\r\n        const arr = document.querySelectorAll('.bar')\r\n        for (let k = 0; k < arr.length; k++) {\r\n            arr[k].style.backgroundColor = PRIMARY_COLOR\r\n        }\r\n    }\r\n    const initCurrentBars = () => {\r\n        const array = []\r\n        for (let i = 0; i < Number(value) * 2; i++) {\r\n            array.push(\r\n                randomIntFromInterval(\r\n                    20,\r\n                    Math.floor(document.body.clientHeight / 1.2),\r\n                ),\r\n            )\r\n        }\r\n        return array\r\n    }\r\n    const actionSort = async (type) => {\r\n        onResetColorBar()\r\n        if (!typeSpeed) return\r\n        const bars = document.querySelectorAll('.bar')\r\n        const size = bars.length\r\n        if (type === INSERT_SORT) {\r\n            setDisable(true)\r\n            await insertionSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === SELECT_SORT) {\r\n            setDisable(true)\r\n            await selectionSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        // if (type === SHELL_SORT) {\r\n        //     setDisable(true)\r\n        //     await shellSort(currentTimeSpeed)\r\n        //     setDisable(false)\r\n        // }\r\n        if (type === HEAP_SORT) {\r\n            setDisable(true)\r\n            await heapSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === BUBBLE_SORT) {\r\n            setDisable(true)\r\n            await bubbleSort(currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === QUICK_SORT) {\r\n            setDisable(true)\r\n            await quickSort(bars, 0, size - 1, currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n        if (type === MERGED_SORT) {\r\n            setDisable(true)\r\n            await mergeSort(bars, 0, size - 1, currentTimeSpeed)\r\n            setDisable(false)\r\n        }\r\n    }\r\n    const resetArray = () => {\r\n        setTypeAlgorithm('')\r\n        setTypeSpeed('')\r\n        const array = initCurrentBars()\r\n        dispatch(updateArray(array))\r\n        const arr = document.querySelectorAll('.bar')\r\n        for (let k = 0; k < arr.length; k++) {\r\n            arr[k].style.backgroundColor = PRIMARY_COLOR\r\n        }\r\n    }\r\n    useClickOutside(dropdownRef, () => setShowDropdown(false))\r\n    useClickOutside(speedRef, () => setShowSpeed(false))\r\n\r\n    useEffect(() => {\r\n        const array = initCurrentBars()\r\n        onResetColorBar()\r\n        dispatch(updateArray(array))\r\n    }, [value])\r\n    return (\r\n        <div className=\"nav-warraper\">\r\n            <div className=\"container\">\r\n                <h1 className=\"logo-container\">\r\n                    <img className=\"chart-icon\" src={ChartIcon} alt=\"ChartIcon\" />\r\n                    Sorting Visualizer\r\n                </h1>\r\n                <div className=\"nav-content\">\r\n                    <div\r\n                        className={`nav-item ${disable ? 'disable' : ''}`}\r\n                        aria-hidden=\"true\"\r\n                        onClick={resetArray}\r\n                    >\r\n                        Reset Array\r\n                    </div>\r\n                    <div className={`nav-item ${disable ? 'disable' : ''}`}>\r\n                        Size\r\n                        <input\r\n                            type=\"range\"\r\n                            value={value}\r\n                            min=\"5\"\r\n                            max=\"100\"\r\n                            step=\"1\"\r\n                            name=\"aize-array\"\r\n                            id=\"size-array\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className={`nav-item ${showDropdown ? 'btn-active' : ''} ${\r\n                            disable ? 'disable' : ''\r\n                        }`}\r\n                        aria-hidden=\"true\"\r\n                        onClick={handleShowDropdown}\r\n                        id=\"Algo\"\r\n                        ref={dropdownRef}\r\n                    >\r\n                        {!typeAlgorithm ? 'Algorithms' : typeAlgorithm}\r\n                        <span\r\n                            className={`caret ${\r\n                                showDropdown ? 'caret-animations' : ''\r\n                            }`}\r\n                        />\r\n                        {showDropdown && (\r\n                            <div className=\"dropdown-menu\">\r\n                                <ul className=\"list-algorithm\">\r\n                                    {LIST_ALGORITHM.map((algorithm) => (\r\n                                        <li\r\n                                            key={algorithm.id}\r\n                                            className=\"algorithm\"\r\n                                            aria-hidden=\"true\"\r\n                                            onClick={() =>\r\n                                                handleChooseAlgorithm(algorithm.type)\r\n                                            }\r\n                                        >\r\n                                            {algorithm.type}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        disable=\"true\"\r\n                        className={`btn ${disable ? 'btn-disabled' : ''}`}\r\n                        onClick={() => actionSort(typeAlgorithm)}\r\n                    >\r\n                        Sort\r\n                    </button>\r\n                    <div\r\n                        className={`nav-item ${showSpeed ? 'btn-active' : ''} ${\r\n                            disable ? 'disable' : ''\r\n                        }`}\r\n                        aria-hidden=\"true\"\r\n                        id=\"Speed\"\r\n                        onClick={handleShowSpeed}\r\n                        ref={speedRef}\r\n                    >\r\n                        {!typeSpeed ? 'Speed' : typeSpeed}\r\n                        <span\r\n                            className={`caret ${\r\n                                showSpeed ? 'caret-animations' : ''\r\n                            }`}\r\n                        />\r\n                        {showSpeed && (\r\n                            <div className=\"dropdown-menu\">\r\n                                <ul className=\"list-algorithm\">\r\n                                    {SPEEDS.map((speed) => (\r\n                                        <li\r\n                                            key={speed.id}\r\n                                            className=\"algorithm\"\r\n                                            aria-hidden=\"true\"\r\n                                            onClick={() =>\r\n                                                handleChooseSpeed(speed.type)\r\n                                            }\r\n                                        >\r\n                                            {speed.type}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export default function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/github.174448ba.svg\";","import React from 'react'\r\n\r\nimport GithubIcon from '../assets/img/github.svg'\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer-warraper\">\r\n            <div className=\"container\">\r\n                <p className=\"copyright-text\">Copyright &copy; Saransh</p>\r\n                {/* <div className=\"group-icon\">\r\n                    <a href=\"https://github.com/hoanganh20012001/sorting-visualizer\">\r\n                        <img className=\"github-icon\" src={GithubIcon} alt=\"\" />\r\n                    </a>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport SortingVisualier from './components/SortingVisualier'\r\nimport NavBar from './components/NavBar'\r\nimport Footer from './components/Footer'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <NavBar />\r\n            <SortingVisualier />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { store, persistor } from './redux'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <PersistGate persistor={persistor}>\r\n                <App />\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}